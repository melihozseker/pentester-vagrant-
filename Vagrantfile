# -*- mode: ruby -*-
#internet vi: set ft=ruby :
# Copy this file to Vagrantfile in the parent directory.

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
VM_IP="192.168.50.51"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.provision :puppet do |puppet|
    config.vm.box              = "ubuntu/precise64"
    config.ssh.forward_agent   = true
    config.vbguest.auto_update = false
    puppet.manifests_path      = "manifests"
    puppet.manifest_file       = "default.pp"
    puppet.module_path         = "modules"
    if Vagrant.has_plugin?("vagrant-cachier")
      config.cache.scope = :box
    end
  end

  config.vm.provider "virtualbox" do |v|
    host = RbConfig::CONFIG['host_os']

    # Give VM 1/8 system memory & access to all cpu cores on the host
    if host =~ /darwin/
      cpus = `sysctl -n hw.ncpu`.to_i
      # sysctl returns Bytes and we need to convert to MB
      mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / 8
    elsif host =~ /linux/
      cpus = `nproc`.to_i
      # meminfo shows KB and we need to convert to MB
      mem = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024 / 8
    else # sorry Windows folks, I can't help you
      cpus = 2
      mem = 1024
    end

    v.customize ["modifyvm", :id, "--memory", mem]
    v.customize ["modifyvm", :id, "--cpus", cpus]
    #v.name = "#{vm_config.vm.hostname}"
    v.gui  = false
  end

  # forward apache served ports
  config.vm.network :forwarded_port, guest: 80, host: 8888
  # forward tomcat served ports
  config.vm.network :forwarded_port, guest: 8080, host: 8999
  config.vm.network "private_network", ip: VM_IP

  config.vm.provision "shell", path: "installscripts.sh"
  # config.vm.synced_folder 'DVWA', '/var/www/DVWA/'

end
